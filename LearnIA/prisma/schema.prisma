generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Carrera {
  idCarrera     Int          @id @unique(map: "idCarrera_UNIQUE") @default(autoincrement())
  siglasCarrera String?      @db.VarChar(45)
  escuela       String?      @db.VarChar(45)
  nombre        String?      @db.VarChar(45)
  estudiante    Estudiante[]
  materia       Materia[]
}

model Curso {
  idCurso      Int        @id @unique(map: "idCurso_UNIQUE") @default(autoincrement())
  idEstudiante Int
  idMateria    Int
  plazo        String?    @db.VarChar(45)
  descripcion  String?    @db.MediumText
  completado   String?    @db.VarChar(45)
  proyectosRec String?    @db.MediumText
  estudiante   Estudiante @relation(fields: [idEstudiante], references: [idEstudiante], onDelete: Cascade, map: "fk_Curso_Estudiante")
  materia      Materia    @relation(fields: [idMateria], references: [idMateria], onDelete: Cascade, map: "fk_Curso_Materia")
  quizzes      Quiz[]     @relation("CursoQuizzes")
  tema         Tema[]

  @@index([idEstudiante], map: "fk_Curso_Estudiante")
  @@index([idMateria], map: "idMateria_idx")
}

model Estudiante {
  idEstudiante Int      @id @unique(map: "idEstudiante_UNIQUE") @default(autoincrement())
  nombre       String   @db.VarChar(45)
  idCarrera    Int?
  correo       String   @unique(map: "correo_UNIQUE") @db.VarChar(45)
  curso        Curso[]
  carrera      Carrera? @relation(fields: [idCarrera], references: [idCarrera], onDelete: Cascade, map: "idCarrera")

  @@index([idCarrera], map: "idCarrera_idx")
}

model Materia {
  idMateria    Int      @id @unique(map: "idMateria_UNIQUE")
  idCarrera    Int?
  nombre       String?  @db.TinyText
  semestre     Int?
  idMateriaTec String   @unique(map: "idMateriaTec_UNIQUE") @db.VarChar(45)
  objetivos    String?  @db.MediumText
  curso        Curso[]
  carrera      Carrera? @relation(fields: [idCarrera], references: [idCarrera], onDelete: Cascade, map: "fk_Materia_Carrera")

  @@index([idCarrera], map: "idCarrera_idx")
}

model Quiz {
  idQuiz       Int      @id @unique(map: "idQuiz_UNIQUE")
  feedback     String   @db.MediumText
  preguntas    String   @db.MediumText
  fecha        DateTime @db.DateTime(0)
  tipo         String   @db.VarChar(45)
  respuestas   String?  @db.MediumText
  calificacion Int
  idCurso      Int?
  curso        Curso?   @relation("CursoQuizzes", fields: [idCurso], references: [idCurso], onDelete: NoAction, onUpdate: NoAction, map: "fk_Quiz_Curso")

  @@index([idCurso], map: "idCurso_idx")
}

model Tema {
  idTema     Int     @id
  idCurso    Int?
  completado String? @db.VarChar(45)
  nombre     String? @db.VarChar(45)
  curso      Curso?  @relation(fields: [idCurso], references: [idCurso], onDelete: NoAction, onUpdate: NoAction, map: "idCurso")

  @@index([idCurso], map: "idCurso_idx")
}
