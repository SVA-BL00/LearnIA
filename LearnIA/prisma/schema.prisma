generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Carrera {
  idCarrera  Int          @id @unique(map: "idCarrera_UNIQUE") @default(autoincrement())
  nombre     String?      @unique(map: "nombre_UNIQUE") @db.VarChar(45)
  escuela    String?      @unique(map: "escuela_UNIQUE") @db.VarChar(45)
  materias   String?      @unique(map: "materias_UNIQUE") @db.VarChar(45)
  estudiante Estudiante[]
  materia    Materia[]
}

model Curso {
  idCurso          Int          @id @unique(map: "idCurso_UNIQUE") @default(autoincrement())
  idEstudiante     Int
  idMateria        Int
  temasCompletados String?      @db.VarChar(45)
  temasCursar      String?      @db.VarChar(45)
  plazo            String?      @db.VarChar(45)
  idEvaluaciones   Int          @unique(map: "idEvaluaciones_UNIQUE")
  estudiante       Estudiante   @relation(fields: [idEstudiante], references: [idEstudiante], onDelete: Cascade, map: "fk_Curso_Estudiante")
  evaluaciones     Evaluaciones @relation(fields: [idEvaluaciones], references: [idEvaluaciones], onDelete: Cascade, map: "fk_Curso_Evaluaciones")
  materia          Materia      @relation(fields: [idMateria], references: [idMateria], onDelete: Cascade, map: "fk_Curso_Materia")

  @@index([idEstudiante], map: "fk_Curso_Estudiante")
  @@index([idMateria], map: "idMateria_idx")
}

model Estudiante {
  idEstudiante      Int      @id @unique(map: "idEstudiante_UNIQUE") @default(autoincrement())
  nombre            String   @db.VarChar(45)
  idCarrera         Int?
  correo            String   @unique(map: "correo_UNIQUE") @db.VarChar(45)
  cursosCompletados String?  @db.VarChar(45)
  cursosInscritos   String?  @db.VarChar(45)
  curso             Curso[]
  carrera           Carrera? @relation(fields: [idCarrera], references: [idCarrera], onDelete: Cascade, map: "idCarrera")

  @@index([idCarrera], map: "idCarrera_idx")
}

model Evaluaciones {
  idEvaluaciones                      Int    @id @unique(map: "idEvaluaciones_UNIQUE")
  quizInicial                         Int
  quiz1                               Int?
  quiz2                               Int?
  final                               Int?
  Curso                               Curso?
  quiz_Evaluaciones_finalToQuiz       Quiz?  @relation("Evaluaciones_finalToQuiz", fields: [final], references: [idQuiz], onDelete: Cascade, map: "final")
  quiz_Evaluaciones_quiz1ToQuiz       Quiz?  @relation("Evaluaciones_quiz1ToQuiz", fields: [quiz1], references: [idQuiz], onDelete: Cascade, map: "quiz1")
  quiz_Evaluaciones_quiz2ToQuiz       Quiz?  @relation("Evaluaciones_quiz2ToQuiz", fields: [quiz2], references: [idQuiz], onDelete: Cascade, map: "quiz2")
  quiz_Evaluaciones_quizInicialToQuiz Quiz   @relation("Evaluaciones_quizInicialToQuiz", fields: [quizInicial], references: [idQuiz], onDelete: Cascade, map: "quizInicial")

  @@index([final], map: "final_idx")
  @@index([quiz1], map: "quiz1_idx")
  @@index([quiz2], map: "quiz2_idx")
  @@index([quizInicial], map: "quizInicial_idx")
}

model Materia {
  idMateria    Int      @id @unique(map: "idMateria_UNIQUE")
  idCarrera    Int?
  nombre       String?  @db.VarChar(45)
  temas        String?  @db.VarChar(45)
  semestre     Int?
  idMateriaTec String   @unique(map: "idMateriaTec_UNIQUE") @db.VarChar(45)
  curso        Curso[]
  carrera      Carrera? @relation(fields: [idCarrera], references: [idCarrera], onDelete: Cascade, map: "fk_Materia_Carrera")

  @@index([idCarrera], map: "idCarrera_idx")
}

model Quiz {
  idQuiz                                      Int            @id @unique(map: "idQuiz_UNIQUE")
  feedback                                    String         @db.VarChar(45)
  preguntas                                   String         @db.VarChar(45)
  fecha                                       DateTime       @db.DateTime(0)
  evaluaciones_Evaluaciones_finalToQuiz       Evaluaciones[] @relation("Evaluaciones_finalToQuiz")
  evaluaciones_Evaluaciones_quiz1ToQuiz       Evaluaciones[] @relation("Evaluaciones_quiz1ToQuiz")
  evaluaciones_Evaluaciones_quiz2ToQuiz       Evaluaciones[] @relation("Evaluaciones_quiz2ToQuiz")
  evaluaciones_Evaluaciones_quizInicialToQuiz Evaluaciones[] @relation("Evaluaciones_quizInicialToQuiz")
}
